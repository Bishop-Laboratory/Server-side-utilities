#!/bin/bash

function usage {
    echo
    echo "BoxBackup [-u username] [-p password] [-t target folder] [-s source folder]"
    echo
    echo "  -u|--username         Username          Input your box username. e.g. username@uthscsa.edu."
    echo "  -p|--password         Password          If left blank, user will be prompted interactively with a secure input."
    echo "  -t|--target_folder    Directory         Box folder to send files to. e.g. '/Henry_Miller/Cluster_Backups/Analyses'"
    echo "  -s|--source_folder    Directory         Local folder to send files from. e.g. '/home/UTHSCSA/millerh1/Bishop.lab/'"
    echo "  -h|--help                               Display usage info"
    echo
    exit 1
}

# if less than four arguments supplied, display usage 
if [  $# -le 3 ] 
then 
	usage
	exit 1
fi 
 
# check whether user had supplied -h or --help . If yes display usage 
if [[ ( $# == "--help") ||  $# == "-h" ]] 
then 
	usage
	exit 0
fi 

# Argparse
while [ "$#" -gt 0 ]; do
  case "$1" in
    -u) USER="$2"; shift 2;;
    -p) PASS="$2"; shift 2;;
    -t) TARGETFOLDER="$2"; shift 2;;
    -s) SOURCEFOLDER="$2"; shift 2;;

    --username=*) USER="${1#*=}"; shift 1;;
    --password=*) PASS="${1#*=}"; shift 1;;
    --target_folder=*) TARGETFOLDER="${1#*=}"; shift 1;;
    --source_folder=*) SOURCEFOLDER="${1#*=}"; shift 1;;
    
    -*) echo "unknown option: $1" >&2; exit 1;;
    *) handle_argument "$1"; shift 1;;
  esac
done

if [ -z "$PASS" ]; then
  echo "Account $USER enter password: "
  read -s PASS
fi

echo "Params entered ..."
echo "Starting backup"

# Get the install directory
BIN_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SCRIPT_DIR=$BIN_DIR/BoxBackup_Logs
 

# Create a BoxBackup folder if one doesn't exist. This is where log files are stored. 
mkdir -p $SCRIPT_DIR

#Output stderr to a log file
datSTR=$(date "+%m%d%Y_%T")
LOGFILE=$SCRIPT_DIR/$datSTR.BoxBackup_log.txt
(
  echo "$(date "+%m%d%Y %T") : Starting transfer"
  lftp -f "
  open ftp.box.com
  user $USER $PASS
  lcd $SOURCEFOLDER
  mirror --only-newer --ignore-time --parallel=10 --reverse --verbose $SOURCEFOLDER $TARGETFOLDER
  bye
  "
  echo "$(date "+%m%d%Y %T") : Done"
) |& tee $LOGFILE 


